using namespace std;

string @project_name;
string @output_name = "application";
string @rpath = "/usr/local/lib/genericjs";
string @generated_files_dir = "lib";
// END LINKING
# runs with the following option:
# -DCMAKE_TOOLCHAIN_FILE "$CHEERP_PATH/share/cmake/Modules/CheerpToolchain.cmake"

cmake_minimum_required(VERSION 3.0)

project(<%= project_name %>)
include_directories(lib)

set(CMAKE_CXX_FLAGS "-target cheerp-genericjs -D__CHEERP_CLIENT__")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-unknown-pragmas -pedantic")

if (CMAKE_BUILD_TYPE EQUAL "DEBUG")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}" -cheerp-sourcemap=<%= output_name %>.js.map -cheerp-sourcemap-standalone)
endif()

file(GLOB_RECURSE app_src *.cpp *.cxx)

add_executable(<%= output_name %> ${app_src})

target_link_libraries(<%= output_name %>
  crails-semantics
  crails-router
  comet
)
